{"ast":null,"code":"import \"core-js/modules/es.regexp.flags.js\";\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"map\",\n  id: \"map\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Select one\"\n}, \"Select one\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"container\"\n};\nconst _hoisted_6 = {\n  class: \"right\"\n};\nconst _hoisted_7 = {\n  class: \"name\"\n};\nconst _hoisted_8 = {\n  class: \"d-flex flex-row\"\n};\nconst _hoisted_9 = {\n  class: \"region\"\n};\nconst _hoisted_10 = {\n  class: \"d-flex flex-row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"Nav\"]), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"select\", {\n    name: \"countries\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selected = $event)\n  }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.countriesList, (country, i) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: country,\n      key: i\n    }, _toDisplayString(country.name.official), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.selected]])]), $setup.selected ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n    class: \"left\",\n    style: _normalizeStyle({\n      backgroundImage: 'url(' + $setup.selected.flags.png + ')'\n    })\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, \"Official name: \" + _toDisplayString($setup.selected.name.official), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createTextVNode(\" Currencies: \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selected.currencies, (currency, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"currencies\",\n      key: i\n    }, \" \" + _toDisplayString(currency.name) + \" ,\", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selected.capital, (capital, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"capital\",\n      key: i\n    }, \"Capital: \" + _toDisplayString(capital), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_9, \"Region: \" + _toDisplayString($setup.selected.region), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, [_createTextVNode(\" Languages: \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selected.languages, (language, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"languages\",\n      key: i\n    }, \" \" + _toDisplayString(language) + \",\", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.addToWatchList($setup.selected))\n  }, \"Add to My Watchlist\")])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","id","value","_createVNode","$setup","_hoisted_1","_hoisted_2","name","selected","$event","_hoisted_3","_createElementBlock","_Fragment","_renderList","countriesList","country","i","key","official","_hoisted_4","_hoisted_5","style","_normalizeStyle","backgroundImage","flags","png","_hoisted_6","_hoisted_7","_toDisplayString","_hoisted_8","currencies","currency","capital","_hoisted_9","region","_hoisted_10","languages","language","onClick","_cache","addToWatchList"],"sources":["/Users/borsodiadam/Documents/DestinationTrackerVueTs/destination-tracker/src/views/CountriesView.vue"],"sourcesContent":["<template>\n   <Nav />\n   <div class=\"map\" id=\"map\"></div>\n   <div class=\"d-flex justify-content-center\">\n      <select name=\"countries\" v-model=\"selected\">\n         <option value=\"Select one\">Select one</option>\n         <option :value=\"country\" v-for=\"(country, i) in countriesList\" :key=\"i\">{{ country.name.official }}</option>\n      </select>\n   </div>\n   <div class=\"container\" v-if=\"selected\">\n      <div class=\"left\" :style=\"{ backgroundImage: 'url(' + selected.flags.png + ')' }\"></div>\n      <div class=\"right\">\n         <div class=\"name\">Official name: {{ selected.name.official }}</div>\n         <div class=\"d-flex flex-row\">\n            Currencies:\n            <div class=\"currencies\" v-for=\"(currency, i) in selected.currencies\" :key=\"i\">&nbsp;{{ currency.name }} ,</div>\n         </div>\n         <div class=\"capital\" v-for=\"(capital, i) in selected.capital\" :key=\"i\">Capital: {{ capital }}</div>\n         <div class=\"region\">Region: {{ selected.region }}</div>\n         <div class=\"d-flex flex-row\">\n            Languages:\n            <div class=\"languages\" v-for=\"(language, i) in selected.languages\" :key=\"i\">&nbsp;{{ language }},</div>\n         </div>\n      </div>\n      <button class=\"btn\" @click=\"addToWatchList(selected)\">Add to My Watchlist</button>\n   </div>\n</template>\n<script setup>\n   import Nav from '../components/Nav.vue';\n   import axios from 'axios';\n   import { ref, onMounted, watch } from 'vue';\n   import { baseURL } from '../stores/counter';\n\n   const selected = ref('');\n   const countriesList = ref([]);\n   const latitude = ref(null);\n   const longitude = ref(null);\n\n   const header = {\n      'Content-Type': 'application/json',\n   };\n\n   let map;\n   let marker;\n\n   const countries = async () => (await axios.get('https://restcountries.com/v3.1/all')).data;\n\n   const setMap = (lat, long, zoom = 11) => {\n      if (!map) {\n         map = L.map('map').setView([lat, long], zoom);\n         L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            maxZoom: 19,\n            attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n         }).addTo(map);\n      } else {\n         map.setView([lat, long], zoom);\n      }\n      if (!marker) {\n         marker = L.marker([lat, long]).addTo(map);\n      } else {\n         marker.setLatLng([lat, long]);\n      }\n   };\n\n   const addToWatchList = async country => {\n      const res = await axios.get(baseURL + 'countries');\n      let id;\n\n      if (res.data.length == 0) {\n         id = 0;\n      } else {\n         const lastID = res.data.at(-1).id;\n         id = lastID + 1;\n      }\n\n      const data = {\n         id,\n         country: {\n            name: country.name.official,\n            cca3: country.cca3,\n            independent: country.independent,\n            currencies: country.currencies.name,\n            region: country.region,\n            capital: country.capital,\n            languages: country.languages,\n            latlng: country.capitalInfo.latlng,\n            flag: country.flags.png,\n            flagAlike: country.flag,\n         },\n      };\n\n      let exist;\n      for (const k in res.data) {\n         if (res.data[k].country.name == country.name.official) exist = true;\n      }\n      if (!exist) await axios.post(baseURL + 'countries', data, header);\n      else return;\n   };\n\n   onMounted(async () => {\n      for (const i of await countries()) {\n         countriesList.value.push(i);\n      }\n      if (navigator.geolocation) {\n         navigator.geolocation.getCurrentPosition(position => {\n            latitude.value = position.coords.latitude;\n            longitude.value = position.coords.longitude;\n            setMap(latitude.value, longitude.value);\n\n            watch(selected, (newValue, oldValue) => {\n               if (newValue !== oldValue) {\n                  latitude.value = selected.value.capitalInfo.latlng[0];\n                  longitude.value = selected.value.capitalInfo.latlng[1];\n                  setMap(latitude.value, longitude.value);\n               }\n            });\n         });\n      }\n   });\n</script>\n<style>\n   .container {\n      display: flex;\n      gap: 2rem;\n      align-items: center;\n      justify-content: center;\n      margin-top: 30px;\n   }\n   .left {\n      width: 500px;\n      height: 250px;\n      background-repeat: no-repeat;\n      background-size: cover;\n   }\n   .right {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      gap: 25px;\n   }\n   .map {\n      margin: 0 auto;\n      width: 80vw;\n      height: 60vh;\n   }\n   .select {\n      margin-top: 10px;\n   }\n   .btn {\n      border: 1px solid black;\n   }\n</style>\n"],"mappings":";;gCAEGA,mBAAA,CAAgC;EAA3BC,KAAK,EAAC,KAAK;EAACC,EAAE,EAAC;;;EACfD,KAAK,EAAC;AAA+B;gCAEpCD,mBAAA,CAA8C;EAAtCG,KAAK,EAAC;AAAY,GAAC,YAAU;;;;EAItCF,KAAK,EAAC;;;EAEHA,KAAK,EAAC;AAAO;;EACVA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAiB;;6DAlBlCG,YAAA,CAAOC,MAAA,UACPC,UAAgC,EAChCN,mBAAA,CAKM,OALNO,UAKM,G,gBAJHP,mBAAA,CAGS;IAHDQ,IAAI,EAAC,WAAW;+DAAUH,MAAA,CAAAI,QAAQ,GAAAC,MAAA;MACvCC,UAA8C,G,kBAC9CC,mBAAA,CAA4GC,SAAA,QAAAC,WAAA,CAA5DT,MAAA,CAAAU,aAAa,GAA5BC,OAAO,EAAEC,CAAC;yBAA3CL,mBAAA,CAA4G;MAAnGT,KAAK,EAAEa,OAAO;MAAyCE,GAAG,EAAED;wBAAMD,OAAO,CAACR,IAAI,CAACW,QAAQ,wBAAAC,UAAA;2EAFjEf,MAAA,CAAAI,QAAQ,E,KAKhBJ,MAAA,CAAAI,QAAQ,I,cAArCG,mBAAA,CAgBM,OAhBNS,UAgBM,GAfHrB,mBAAA,CAAwF;IAAnFC,KAAK,EAAC,MAAM;IAAEqB,KAAK,EAAAC,eAAA;MAAAC,eAAA,WAA8BnB,MAAA,CAAAI,QAAQ,CAACgB,KAAK,CAACC,GAAG;IAAA;2BACxE1B,mBAAA,CAYM,OAZN2B,UAYM,GAXH3B,mBAAA,CAAmE,OAAnE4B,UAAmE,EAAjD,iBAAe,GAAAC,gBAAA,CAAGxB,MAAA,CAAAI,QAAQ,CAACD,IAAI,CAACW,QAAQ,kBAC1DnB,mBAAA,CAGM,OAHN8B,UAGM,G,iBAHuB,eAE1B,I,kBAAAlB,mBAAA,CAA+GC,SAAA,QAAAC,WAAA,CAA/DT,MAAA,CAAAI,QAAQ,CAACsB,UAAU,GAAnCC,QAAQ,EAAEf,CAAC;yBAA3CL,mBAAA,CAA+G;MAA1GX,KAAK,EAAC,YAAY;MAA+CiB,GAAG,EAAED;OAAG,GAAM,GAAAY,gBAAA,CAAGG,QAAQ,CAACxB,IAAI,IAAG,IAAE;uDAE5GI,mBAAA,CAAmGC,SAAA,QAAAC,WAAA,CAAvDT,MAAA,CAAAI,QAAQ,CAACwB,OAAO,GAA/BA,OAAO,EAAEhB,CAAC;yBAAvCL,mBAAA,CAAmG;MAA9FX,KAAK,EAAC,SAAS;MAA2CiB,GAAG,EAAED;OAAG,WAAS,GAAAY,gBAAA,CAAGI,OAAO;kCAC1FjC,mBAAA,CAAuD,OAAvDkC,UAAuD,EAAnC,UAAQ,GAAAL,gBAAA,CAAGxB,MAAA,CAAAI,QAAQ,CAAC0B,MAAM,kBAC9CnC,mBAAA,CAGM,OAHNoC,WAGM,G,iBAHuB,cAE1B,I,kBAAAxB,mBAAA,CAAuGC,SAAA,QAAAC,WAAA,CAAxDT,MAAA,CAAAI,QAAQ,CAAC4B,SAAS,GAAlCC,QAAQ,EAAErB,CAAC;yBAA1CL,mBAAA,CAAuG;MAAlGX,KAAK,EAAC,WAAW;MAA8CiB,GAAG,EAAED;OAAG,GAAM,GAAAY,gBAAA,CAAGS,QAAQ,IAAG,GAAC;sCAGvGtC,mBAAA,CAAkF;IAA1EC,KAAK,EAAC,KAAK;IAAEsC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAA9B,MAAA,IAAEL,MAAA,CAAAoC,cAAc,CAACpC,MAAA,CAAAI,QAAQ;KAAG,qBAAmB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}